"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5385],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),h=i,m=p["".concat(s,".").concat(h)]||p[h]||d[h]||r;return n?a.createElement(m,o(o({ref:t},c),{},{components:n})):a.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:i,o[1]=l;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},3245:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var a=n(7462),i=(n(7294),n(3905));const r={sidebar_position:2,title:"Authelia",id:"Authelia",position:2,tags:["Introduction","Authelia","docker","docker-compose","tips"]},o="Authelia Container: Secure Authentication and Identity Portal",l={unversionedId:"applications/Authelia",id:"applications/Authelia",title:"Authelia",description:"Authelia Logo",source:"@site/docs/applications/authelia.md",sourceDirName:"applications",slug:"/applications/Authelia",permalink:"/docs/applications/Authelia",draft:!1,tags:[{label:"Introduction",permalink:"/docs/tags/introduction"},{label:"Authelia",permalink:"/docs/tags/authelia"},{label:"docker",permalink:"/docs/tags/docker"},{label:"docker-compose",permalink:"/docs/tags/docker-compose"},{label:"tips",permalink:"/docs/tags/tips"}],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Authelia",id:"Authelia",position:2,tags:["Introduction","Authelia","docker","docker-compose","tips"]},sidebar:"tutorialSidebar",previous:{title:"Aprise",permalink:"/docs/applications/Aprise"},next:{title:"Bazarr",permalink:"/docs/applications/Bazarr"}},s={},u=[{value:"What is Authelia?",id:"what-is-authelia",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setting up Authelia in a Docker Container",id:"setting-up-authelia-in-a-docker-container",level:2},{value:"Configuring Authelia",id:"configuring-authelia",level:2},{value:"Configuring Nginx",id:"configuring-nginx",level:2},{value:"Running Authelia",id:"running-authelia",level:2},{value:"Accessing Authelia",id:"accessing-authelia",level:2},{value:"Conclusion",id:"conclusion",level:2}],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"authelia-container-secure-authentication-and-identity-portal"},"Authelia Container: Secure Authentication and Identity Portal"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://www.authelia.com/img/logo.png",alt:"Authelia Logo"})),(0,i.kt)("p",null,"Authentication is a critical aspect of any modern web application. Whether you're running a personal blog or a complex enterprise system, ensuring that only authorized users gain access is paramount. Authelia is an open-source authentication and identity portal that helps you protect your applications and services with robust security measures. In this blog post, we'll explore Authelia and how to set it up in a Docker container."),(0,i.kt)("h2",{id:"what-is-authelia"},"What is Authelia?"),(0,i.kt)("p",null,"Authelia is an authentication and access control solution that adds an extra layer of security to your web applications. It provides features like:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Two-Factor Authentication (2FA):")," Enhance security by requiring users to enter a one-time code generated by an authenticator app or received via email or SMS.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Single Sign-On (SSO):")," Users can log in once and access multiple applications without having to re-enter their credentials.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Identity Portal:")," A web-based portal where users can manage their authentication methods and perform self-service actions, such as password resets.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Access Control:")," Define fine-grained access policies to restrict user access to specific resources or services.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Integration:")," Authelia works seamlessly with popular reverse proxies like Nginx, Caddy, and Traefik, making it a versatile solution for securing web applications.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"LDAP and 2FA Backend Support:")," Authelia supports a wide range of backends for user storage and two-factor authentication methods."))),(0,i.kt)("p",null,"Now, let's explore how to set up Authelia in a Docker container."),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("p",null,"Before you begin, make sure you have the following prerequisites in place:"),(0,i.kt)("p",null,"1","."," ",(0,i.kt)("strong",{parentName:"p"},"Docker:")," Ensure you have Docker installed on your server or development machine. You can download and install Docker from the official website: ",(0,i.kt)("a",{parentName:"p",href:"https://www.docker.com/get-started"},"Docker"),"."),(0,i.kt)("p",null,"2","."," ",(0,i.kt)("strong",{parentName:"p"},"Domain Name:")," You should have a domain name pointing to your server's IP address. Authelia requires a valid domain for SSL/TLS certificates."),(0,i.kt)("h2",{id:"setting-up-authelia-in-a-docker-container"},"Setting up Authelia in a Docker Container"),(0,i.kt)("p",null,"Setting up Authelia in a Docker container is a straightforward process. You can use a ",(0,i.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file to define and configure the necessary services. Below is a basic ",(0,i.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file to get you started:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'\nversion: \'3\'\n\nservices:\n\n\xa0 authelia:\n\n\xa0 \xa0 image: authelia/authelia\n\n\xa0 \xa0 container_name: authelia\n\n\xa0 \xa0 volumes:\n\n\xa0 \xa0 \xa0 - ./config:/config\n\n\xa0 \xa0 ports:\n\n\xa0 \xa0 \xa0 - "9091:9091"\n\n\xa0 \xa0 environment:\n\n\xa0 \xa0 \xa0 - TZ=America/New_York # Set your timezone here\n\n\xa0 \xa0 \xa0 - AUTO_GENERATE_CERTS=true # Auto-generate SSL certificates\n\n\xa0 \xa0 networks:\n\n\xa0 \xa0 \xa0 - authelia_network\n\n\xa0 nginx:\n\n\xa0 \xa0 image: nginx\n\n\xa0 \xa0 container_name: nginx\n\n\xa0 \xa0 volumes:\n\n\xa0 \xa0 \xa0 - ./nginx.conf:/etc/nginx/nginx.conf\n\n\xa0 \xa0 \xa0 - ./authelia:/etc/nginx/authelia\n\n\xa0 \xa0 ports:\n\n\xa0 \xa0 \xa0 - "80:80"\n\n\xa0 \xa0 \xa0 - "443:443"\n\n\xa0 \xa0 depends_on:\n\n\xa0 \xa0 \xa0 - authelia\n\n\xa0 \xa0 networks:\n\n\xa0 \xa0 \xa0 - authelia_network\n\nnetworks:\n\n\xa0 authelia_network:\n\n\xa0 \xa0 driver: bridge\n\n')),(0,i.kt)("p",null,"Here's a breakdown of the above ",(0,i.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"We define two services: ",(0,i.kt)("inlineCode",{parentName:"p"},"authelia")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"nginx"),". The ",(0,i.kt)("inlineCode",{parentName:"p"},"authelia")," service runs the Authelia container, and the ",(0,i.kt)("inlineCode",{parentName:"p"},"nginx")," service runs an Nginx reverse proxy.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Authelia uses a volume called ",(0,i.kt)("inlineCode",{parentName:"p"},"config")," to store its configuration files. You can customize Authelia's configuration by modifying the files in the ",(0,i.kt)("inlineCode",{parentName:"p"},"./config")," directory.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"We expose ports 9091 (Authelia) and 80/443 (Nginx) to the host machine, allowing external access.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"You can set your server's timezone using the ",(0,i.kt)("inlineCode",{parentName:"p"},"TZ")," environment variable.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"AUTO_GENERATE_CERTS")," environment variable instructs Authelia to generate self-signed SSL certificates automatically. For a production setup, consider using Let's Encrypt or your own SSL certificates.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The Nginx service uses a custom ",(0,i.kt)("inlineCode",{parentName:"p"},"nginx.conf")," file and a volume named ",(0,i.kt)("inlineCode",{parentName:"p"},"authelia")," to configure the reverse proxy."))),(0,i.kt)("h2",{id:"configuring-authelia"},"Configuring Authelia"),(0,i.kt)("p",null,"Authelia's configuration is highly customizable and can be tailored to your specific needs. You can find the default configuration files in the Authelia GitHub repository under the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/authelia/authelia/tree/master/config"},"config")," directory."),(0,i.kt)("p",null,"To configure Authelia, follow these steps:"),(0,i.kt)("p",null,"1","."," Create a directory called ",(0,i.kt)("inlineCode",{parentName:"p"},"config")," in the same directory as your ",(0,i.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file."),(0,i.kt)("p",null,"2","."," Inside the ",(0,i.kt)("inlineCode",{parentName:"p"},"config")," directory, copy the default Authelia configuration files from the GitHub repository."),(0,i.kt)("p",null,"3","."," Customize the configuration files to match your requirements. Pay close attention to ",(0,i.kt)("inlineCode",{parentName:"p"},"configuration.yml"),", where you define authentication backends, two-factor authentication methods, and access control rules."),(0,i.kt)("p",null,"4","."," Save your changes."),(0,i.kt)("h2",{id:"configuring-nginx"},"Configuring Nginx"),(0,i.kt)("p",null,"Nginx serves as a reverse proxy in front of Authelia. It's responsible for handling SSL/TLS encryption and forwarding requests to Authelia for authentication. You'll need to create an ",(0,i.kt)("inlineCode",{parentName:"p"},"nginx.conf")," file to configure Nginx."),(0,i.kt)("p",null,"Here's a simple example of an ",(0,i.kt)("inlineCode",{parentName:"p"},"nginx.conf")," file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-nginx"},"\nhttp {\n\n\xa0 server {\n\n\xa0 \xa0 listen 80;\n\n\xa0 \xa0 server_name yourdomain.com;\n\n\xa0 \xa0 location / {\n\n\xa0 \xa0 \xa0 proxy_pass http://authelia:9091;\n\n\xa0 \xa0 \xa0 proxy_set_header Host $host;\n\n\xa0 \xa0 \xa0 proxy_set_header X-Real-IP $remote_addr;\n\n\xa0 \xa0 \xa0 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n\xa0 \xa0 }\n\n\xa0 }\n\n\xa0 server {\n\n\xa0 \xa0 listen 443 ssl;\n\n\xa0 \xa0 server_name yourdomain.com;\n\n\xa0 \xa0 ssl_certificate /etc/nginx/authelia/authelia.crt;\n\n\xa0 \xa0 ssl_certificate_key /etc/nginx/authelia/authelia.key;\n\n\xa0 \xa0 location / {\n\n\xa0 \xa0 \xa0 proxy_pass http://authelia:9091;\n\n\xa0 \xa0 \xa0 proxy_set_header Host $host;\n\n\xa0 \xa0 \xa0 proxy_set_header X-Real-IP $remote_addr;\n\n\xa0 \xa0 \xa0 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n\xa0 \xa0 }\n\n\xa0 }\n\n}\n\n")),(0,i.kt)("p",null,"This configuration listens on ports 80 and 443, sets up SSL/TLS using the certificates generated by Authelia, and forwards requests to the Authelia container."),(0,i.kt)("h2",{id:"running-authelia"},"Running Authelia"),(0,i.kt)("p",null,"To start Authelia, navigate to the directory containing your ",(0,i.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file and run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"\ndocker-compose up -d\n\n")),(0,i.kt)("p",null,"This command will start Authelia and Nginx in the background."),(0,i.kt)("h2",{id:"accessing-authelia"},"Accessing Authelia"),(0,i.kt)("p",null,"You can now access Authelia by visiting your domain name in a web browser. Authelia will prompt you to log in or register if you haven't already. After authentication, it will protect your applications and services according to the access control rules you've configured."),(0,i.kt)("h2",{id:"conclusion"},"Conclusion"),(0,i.kt)("p",null,"Authelia is a powerful open-source authentication and identity portal that enhances the security of your web applications. By setting up Authelia in a Docker container, you can easily integrate it with your existing infrastructure and protect your services with features like two-factor authentication and single sign-on. Remember to tailor the configuration to your specific needs and consider additional security measures like Let's Encrypt for SSL/TLS certificates in a production environment. With Authelia, you can keep your applications secure and your users' identities protected."))}d.isMDXComponent=!0}}]);